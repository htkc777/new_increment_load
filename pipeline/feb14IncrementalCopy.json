{
	"name": "feb14IncrementalCopy",
	"properties": {
		"activities": [
			{
				"name": "LKP_OldWaterMarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "watermarkbitsDest",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LKP_NewWaterMarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT MAX(InsertDateTime) AS NewWaterMarkValue FROM dbo.orders",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ordersTablesource",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy_data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LKP_OldWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LKP_NewWaterMarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * FROM dbo.orders where InsertDateTime >'@{activity('LKP_OldWaterMarkValue').output.firstRow.WaterMarkValue}'\nand InsertDateTime <= '@{activity('LKP_NewWaterMarkValue').output.firstRow.NewWaterMarkValue}'\n\n\n\n\n\n\n\n\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "OrederID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OrederID",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "ProductID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "ProductID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "UnitPrice",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 10
								},
								"sink": {
									"name": "UnitPrice",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 4,
									"precision": 10
								}
							},
							{
								"source": {
									"name": "Quantity",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "Quantity",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "InsertDateTime",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "InsertDateTime",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ordersTablesource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Final_store_orders",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Set Watermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_data ",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spSetWatermark]",
					"storedProcedureParameters": {
						"NewTime": {
							"value": {
								"value": "@activity('LKP_NewWaterMarkValue').output.firstRow.NewWaterMarkValue\n\n\n",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@activity('LKP_OldWaterMarkValue').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-02-16T04:36:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}